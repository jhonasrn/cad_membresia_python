# Generated by Django 5.1.4 on 2025-01-17 18:17

from django.db import migrations

def populate_membros(apps, schema_editor):
    Membro = apps.get_model('membros', 'Membro')  # Obtém o modelo Membro
    Filho = apps.get_model('membros', 'Filho')    # Obtém o modelo Filho

    # Inserindo 20 membros fictícios
    for i in range(22, 50):
        membro = Membro.objects.create(
            nome=f"Nome do Membro {i}",
            codigo=f"Código_{i}",
            situacao_atual="Ativo",
            aliancado_ativo=True,
            data_nascimento="1980-05-15",  
            sexo="M" if i % 2 == 0 else "F",  
            endereco="Rua Exemplo, 123",
            numero="123",
            bairro="Bairro Exemplo",
            estado="Estado Exemplo",
            cidade="Cidade Exemplo",
            cep="12345-678",
            complemento="Apartamento 101",
            naturalidade="Cidade Exemplo",
            estado_civil="Solteiro",
            rg=f"RG{i:04d}",
            cpf=f"CPF{i:04d}123456",
            nacionalidade="Brasileiro",
            telefone="123456789",
            celular="987654321",
            telefone_emergencia="1122334455",
            email=f"membro{i}@exemplo.com",
            tipo_membro="Igreja Local",
            mae=f"Mae do Membro {i}",
            pai=f"Pai do Membro {i}",
            nome_conjugue=f"Conjugue do Membro {i}" if i % 2 == 0 else None,
            data_casamento="2010-06-15" if i % 2 == 0 else None,
            igreja_batismo="Igreja Exemplo",
            data_batismo="2000-01-01",
            tipo_admissao="Batismo",
            pastor_que_batizou="Pastor Exemplo",
            data_admissao="2005-01-01",
            congregacao="Congregação Exemplo",
            funcao_igreja="Membro",
            ministerio="Ministério Exemplo",
            observacoes="Nenhuma observação",
            foto=None,  # A foto pode ser None se não houver foto para o membro
            hoje_casamento=False,
            este_mes_casamento=False,
            idade_casamento=None,
            data_cadastro="2025-01-01",
            tem_filhos=True if i % 2 == 0 else False
        )

        # Se o membro tem filhos, cria filhos associados
        if i % 2 == 0:
            filho = Filho.objects.create(
                nome=f"Filho do Membro {i}",
                data_nascimento="2015-01-01",
                membro=membro
            )
            membro.filhos.add(filho)
            membro.save()


class Migration(migrations.Migration):

    dependencies = [
        ('membros', '0001_initial'),  # Dependência da migração inicial (ou qualquer migração anterior)
    ]

    operations = [
        migrations.RunPython(populate_membros),  # Executa a função para inserir os dados
    ]